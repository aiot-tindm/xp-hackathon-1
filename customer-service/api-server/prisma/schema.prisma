generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Management Tables
model Brand {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  items         Item[]
  brandSummaries BrandSummary[]

  @@map("brands")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  items            Item[]
  categorySummaries CategorySummary[]

  @@map("categories")
}

model Customer {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  email       String   @unique @db.VarChar(255)
  phoneNumber String?  @map("phone_number") @db.VarChar(20)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  orders         Order[]
  loyalCustomer  LoyalCustomer?

  @@map("customers")
}

model LoyalCustomer {
  customerId        Int      @id @map("customer_id")
  totalOrders       Int      @default(0) @map("total_orders")
  totalSpent        Decimal  @default(0) @map("total_spent") @db.Decimal(15, 2)
  lastPurchaseDate  DateTime? @map("last_purchase_date") @db.Date
  loyaltySegment    String   @default("Má»›i") @map("loyalty_segment") @db.VarChar(50)
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  customer Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)

  @@map("loyal_customers")
}

// Analytics Tables
model BrandSummary {
  id                Int      @id @default(autoincrement())
  analysisBy        String   @map("analysis_by") @db.VarChar(10) // 'system' or 'user'
  analysisDate      DateTime @map("analysis_date") @db.Date
  platform          String   @db.VarChar(50)
  brandId           Int      @map("brand_id")
  totalQuantitySold Int      @default(0) @map("total_quantity_sold")
  totalRevenue      Decimal  @default(0) @map("total_revenue") @db.Decimal(15, 2)
  updatedAt         DateTime @updatedAt @map("updated_at")

  brand Brand @relation(fields: [brandId], references: [id], onDelete: Cascade)

  @@unique([analysisDate, platform, brandId])
  @@map("brand_summary")
}

model CategorySummary {
  id                Int      @id @default(autoincrement())
  analysisBy        String   @map("analysis_by") @db.VarChar(10) // 'system' or 'user'
  analysisDate      DateTime @map("analysis_date") @db.Date
  platform          String   @db.VarChar(50)
  categoryId        Int      @map("category_id")
  totalQuantitySold Int      @default(0) @map("total_quantity_sold")
  totalRevenue      Decimal  @default(0) @map("total_revenue") @db.Decimal(15, 2)
  updatedAt         DateTime @updatedAt @map("updated_at")

  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([analysisDate, platform, categoryId])
  @@map("category_summary")
}

model DailySalesSummary {
  id           Int      @id @default(autoincrement())
  analysisBy   String   @map("analysis_by") @db.VarChar(10) // 'system' or 'user'
  analysisDate DateTime @map("analysis_date") @db.Date
  platform     String   @db.VarChar(50)
  totalOrders  Int      @default(0) @map("total_orders")
  totalRevenue Decimal  @default(0) @map("total_revenue") @db.Decimal(15, 2)
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@unique([analysisDate, platform])
  @@map("daily_sales_summary")
}

// Core Business Tables (New Schema)
model Item {
  id                    Int      @id @default(autoincrement())
  sku                   String   @unique @db.VarChar(100)
  name                  String   @db.VarChar(255)
  costPrice             Decimal  @default(0) @map("cost_price") @db.Decimal(10, 2)
  salePrice             Decimal  @map("sale_price") @db.Decimal(10, 2)
  stockQuantity         Int      @default(0) @map("stock_quantity")
  brandId               Int?     @map("brand_id")
  categoryId            Int?     @map("category_id")
  isActive              Boolean  @default(true) @map("is_active")
  isAdultContent        Boolean? @map("is_adult_content")
  nudityDetectionScore  Decimal? @map("nudity_detection_score") @db.Decimal(3, 2)
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @updatedAt @map("updated_at")

  brand    Brand?    @relation(fields: [brandId], references: [id], onDelete: SetNull)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  orderItems OrderItem[]

  @@map("items")
}

model Order {
  id              Int      @id @default(autoincrement())
  orderCode       String   @unique @map("order_code") @db.VarChar(50)
  customerId      Int      @map("customer_id")
  shippingLocation String? @map("shipping_location") @db.VarChar(255)
  platform        String   @db.VarChar(50)
  orderDate       DateTime @default(now()) @map("order_date") @db.Timestamp(6)
  status          String   @db.VarChar(50)
  refundReason    String?  @map("refund_reason") @db.VarChar(255)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  customer   Customer    @relation(fields: [customerId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]

  @@map("orders")
}

model OrderItem {
  id           Int      @id @default(autoincrement())
  orderId      Int      @map("order_id")
  itemId       Int      @map("item_id")
  quantity     Int
  pricePerUnit Decimal  @map("price_per_unit") @db.Decimal(10, 2)
  discountAmount Decimal @default(0) @map("discount_amount") @db.Decimal(10, 2)
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  item  Item  @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@map("order_items")
}

// Configuration Tables
model SystemConfig {
  id          String   @id @default(cuid())
  configType  String   @map("config_type") @db.VarChar(50) // 'segmentation', 'churn', 'rfm', 'recommendation', 'potential_customers'
  businessType String  @default("default") @map("business_type") @db.VarChar(191)
  config      Json
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@unique([configType, businessType])
  @@map("system_config")
} 